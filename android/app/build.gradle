plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services"  // Google Services plugin
}

// Cargar propiedades del keystore
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace "com.masiglesia.demo"
    compileSdkVersion 35

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
        // Habilitar desugaring para características de Java 8
        coreLibraryDesugaringEnabled true
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    // Configuraciones de firma
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    defaultConfig {
        // Application ID único para Mas Iglesia Demo
        applicationId "com.masiglesia.demo"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdkVersion 29
        targetSdkVersion 35
        versionCode 2
        versionName "1.0.0"
        
        // Configuraciones de seguridad
        multiDexEnabled true
        
        // Configuraciones de performance
        ndk {
            abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86_64'
        }
    }

    buildTypes {
        release {
            // Configuración para release - MINIFICACIÓN TEMPORALMENTE DESACTIVADA
            minifyEnabled false
            shrinkResources false
            // proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro', 'consumer-proguard-rules.pro', 'proguard-apis-no-sdk.pro'
            
            // Usar configuración de firma para producción
            signingConfig signingConfigs.release
            
            // Configuración específica para APIs No-SDK
            manifestPlaceholders = [
                allowBackup: false,
                supportsRtl: true
            ]
            
            // Optimizaciones adicionales para eliminar APIs No-SDK
            buildConfigField "boolean", "ENABLE_ACCESSIBILITY_FEATURES", "false"
            
            // Configuración agresiva de ProGuard
            // consumerProguardFiles 'proguard-apis-no-sdk.pro'
        }
        debug {
            // Configuración para debug
            minifyEnabled false
            debuggable true
        }
    }
    
    // Habilitar características de build
    buildFeatures {
        buildConfig true
    }
    
    // Configuración de lint para producción
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

flutter {
    source = "../.."
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.6.1'
    
    // AndroidX Window con versión más estable
    implementation 'androidx.window:window:1.4.0'
    
    // Agregar dependencia para desugaring
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.4'
    
    // Import the Firebase BoM
    implementation(platform("com.google.firebase:firebase-bom:33.4.0"))
    // Add the dependencies for Firebase products you want to use
    implementation("com.google.firebase:firebase-analytics")
    implementation("com.google.firebase:firebase-auth")
    implementation("com.google.firebase:firebase-firestore")
    implementation("com.google.firebase:firebase-storage")
    implementation("com.google.firebase:firebase-messaging")
}
